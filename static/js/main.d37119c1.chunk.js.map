{"version":3,"sources":["components/CacheProvider.jsx","components/GlobalStyles.jsx","components/BaseLayout.jsx","hooks/fetch-with-cache/useFetchOnChange.js","components/SearchTab.jsx","components/Card.jsx","components/CardList.jsx","js/api/api.js","js/entity/Card.js","js/entity/Anime.js","js/mapper/mappers.js","components/Home.jsx","hooks/instant-fetch/useInstantFetch.js","components/Anime.jsx","components/App.jsx","index.js"],"names":["initialValue","JSON","parse","localStorage","getItem","CacheContext","createContext","cacheReducer","state","action","type","payload","key","value","CacheProvider","children","useReducer","dispatch","useEffect","Object","keys","length","serializedState","stringify","setItem","Provider","GlobalStyles","createGlobalStyle","Header","styled","header","StyledNavLink","NavLink","Container","div","BaseLayout","Fragment","to","initialState","data","loading","error","fetchReducer","useFetchOnChange","animeApi","searchTerm","mapper","timeout","cache","useContext","timerId","setTimeout","a","getAnimeBySearchTerm","results","map","item","clearTimeout","Input","input","SearchTab","setSearchTerm","onChange","event","target","Wrapper","CardBackgroundLink","Link","Title","h2","Image","img","Card","animeId","title","image","src","alt","List","CardList","cards","index","id","imageUrl","jikanApi","this","BASE_URL","url","getData","fetch","response","ok","Error","json","Anime","synopsis","episodes","score","rating","trailerUrl","fromJSONToCardEntity","mal_id","image_url","fromJSONToAnimeEntity","trailer_url","Home","useState","message","useInstantFetch","getAnimeById","result","h1","TextContent","IconContainer","Icon","IFrameWrapper","IFrame","iframe","useParams","page","split","filter","element","includes","join","frameBorder","allowFullScreen","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d37119c1.chunk.js","sourcesContent":["import React, { useEffect, useReducer, createContext } from \"react\";\r\n\r\nconst initialValue = JSON.parse(localStorage.getItem(\"JIKAN_CACHE\")) || {};\r\n\r\nexport const CacheContext = createContext();\r\n\r\nconst cacheReducer = (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case \"SET_CACHE\":\r\n      return { ...state, [payload.key]: payload.value };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const CacheProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(cacheReducer, initialValue);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(state).length !== 0) {\r\n      const serializedState = JSON.stringify(state);\r\n      localStorage.setItem(\"JIKAN_CACHE\", serializedState);\r\n    }\r\n  }, [state]);\r\n\r\n  return (\r\n    <CacheContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </CacheContext.Provider>\r\n  );\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n\r\n  html, body, #root {\r\n    width: 100%;\r\n    height: 100%;\r\n    background: #212121;\r\n    color: white;\r\n  }\r\n\r\n  #root {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = styled.header`\r\n  background: #303030;\r\n  width: 100%;\r\n  padding: 1em;\r\n`;\r\n\r\nconst StyledNavLink = styled(NavLink)`\r\n  color: white;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n  align-items: center;\r\n`;\r\n\r\nconst BaseLayout = ({ children }) => (\r\n  <React.Fragment>\r\n    <Header>\r\n      <h1>\r\n        <StyledNavLink to=\"/home\">Home</StyledNavLink>\r\n      </h1>\r\n    </Header>\r\n    <Container>{children}</Container>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default BaseLayout;\r\n","import { useEffect, useReducer, useContext } from \"react\";\r\nimport { CacheContext } from \"../../components/CacheProvider.jsx\";\r\n\r\nconst initialState = { data: null, loading: false, error: null };\r\n\r\nconst fetchReducer = (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case \"LOAD\":\r\n      return { ...state, data: null, loading: true, error: null };\r\n    case \"SUCCESS\":\r\n      return { ...state, data: payload, loading: false, error: null };\r\n    case \"FAILURE\":\r\n      return { ...state, data: null, loading: false, error: payload };\r\n    case \"CLEAN\":\r\n      return { ...state, data: null, loading: false, error: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst useFetchOnChange = (animeApi, searchTerm, mapper, timeout) => {\r\n  const cache = useContext(CacheContext);\r\n  const [state, dispatch] = useReducer(fetchReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    if (cache.state[searchTerm]) {\r\n      dispatch({ type: \"SUCCESS\", payload: cache.state[searchTerm] });\r\n      return;\r\n    }\r\n\r\n    const timerId = setTimeout(async () => {\r\n      if (searchTerm) {\r\n        dispatch({ type: \"LOAD\" });\r\n\r\n        try {\r\n          const data = await animeApi.getAnimeBySearchTerm(searchTerm);\r\n          const results = data.map((item) => mapper(item));\r\n          dispatch({ type: \"SUCCESS\", payload: results });\r\n          cache.dispatch({\r\n            type: \"SET_CACHE\",\r\n            payload: { key: searchTerm, value: results },\r\n          });\r\n        } catch (error) {\r\n          dispatch({ type: \"FAILURE\", payload: error });\r\n        }\r\n      } else {\r\n        dispatch({ type: \"CLEAN\" });\r\n      }\r\n    }, timeout);\r\n\r\n    return () => {\r\n      clearTimeout(timerId);\r\n    };\r\n  }, [animeApi, searchTerm, mapper, timeout, cache]);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFetchOnChange;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Input = styled.input`\r\n  background-color: #262626;\r\n  border: none;\r\n  height: 30px;\r\n  width: 250px;\r\n  margin-top: 20px;\r\n  transition: background-color 0.2s;\r\n  color: white;\r\n  font-size: 15px;\r\n\r\n  &:focus {\r\n    background-color: #303030;\r\n  }\r\n`;\r\n\r\nconst SearchTab = ({ value, setSearchTerm }) => (\r\n  <Input\r\n    type=\"text\"\r\n    value={value}\r\n    onChange={(event) => setSearchTerm(event.target.value)}\r\n  />\r\n);\r\n\r\nSearchTab.propTypes = {\r\n  value: PropTypes.string,\r\n  setSearchTerm: PropTypes.func,\r\n};\r\n\r\nexport default SearchTab;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Wrapper = styled.div`\r\n  flex: 1 0 30%;\r\n  margin: 20px 5px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst CardBackgroundLink = styled(Link)`\r\n  background-color: #303030;\r\n  height: 400px;\r\n  width: 250px;\r\n  color: white;\r\n  text-decoration: none;\r\n  text-align: center;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  box-shadow: 5px 5px 10px 5px rgba(0, 0, 0, 0.2);\r\n\r\n  &:hover img {\r\n    filter: brightness(0.8);\r\n  }\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  height: 100px;\r\n  color: white;\r\n  text-decoration: none;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  transition: filter 0.5s;\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst Card = ({ animeId, title, image }) => (\r\n  <Wrapper>\r\n    <CardBackgroundLink to={`/home/anime/${animeId}`}>\r\n      <Title>{title}</Title>\r\n      <Image src={image} alt={title} />\r\n    </CardBackgroundLink>\r\n  </Wrapper>\r\n);\r\n\r\nCard.propTypes = {\r\n  animeId: PropTypes.number,\r\n  title: PropTypes.string,\r\n  image: PropTypes.string,\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Card from \"./Card.jsx\";\r\n\r\nconst List = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  padding: 20px;\r\n`;\r\n\r\nconst CardList = ({ data }) => {\r\n  const cards = data.map((item, index) => (\r\n    <Card\r\n      key={`card-${index + 1}`}\r\n      animeId={item.id}\r\n      title={item.title}\r\n      image={item.imageUrl}\r\n    />\r\n  ));\r\n  return <List>{cards}</List>;\r\n};\r\n\r\nCardList.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n\r\nexport default CardList;\r\n","class JikanApi {\r\n  constructor() {\r\n    this.BASE_URL = \"https://api.jikan.moe/v3\";\r\n  }\r\n\r\n  async getAnimeBySearchTerm(searchTerm) {\r\n    const url = `${this.BASE_URL}/search/anime?q=${searchTerm}`;\r\n    return await this.getData(url);\r\n  }\r\n\r\n  async getAnimeById(animeId) {\r\n    const url = `${this.BASE_URL}/anime/${animeId}`;\r\n    return await this.getData(url);\r\n  }\r\n\r\n  async getData(url) {\r\n    const response = await fetch(url);\r\n    if (!response.ok) {\r\n      throw new Error(\"Oops! Something went wrong!\");\r\n    }\r\n    const data = await response.json();\r\n\r\n    if (data.results) {\r\n      return data.results;\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n}\r\n\r\nconst jikanApi = new JikanApi();\r\n\r\nexport default jikanApi;\r\n","export default class Card {\r\n  constructor({ id, title, imageUrl }) {\r\n    this.id = id;\r\n    this.title = title;\r\n    this.imageUrl = imageUrl;\r\n  }\r\n}\r\n","export default class Anime {\r\n  constructor({\r\n    title,\r\n    imageUrl,\r\n    synopsis,\r\n    episodes,\r\n    score,\r\n    rating,\r\n    trailerUrl,\r\n  }) {\r\n    this.title = title;\r\n    this.imageUrl = imageUrl;\r\n    this.synopsis = synopsis;\r\n    this.episodes = episodes;\r\n    this.score = score;\r\n    this.rating = rating;\r\n    this.trailerUrl = trailerUrl;\r\n  }\r\n}\r\n","import Card from \"../entity/Card\";\r\nimport Anime from \"../entity/Anime\";\r\n\r\n/**\r\n * @param {Object}\r\n * @returns {import('./Anime.js')} - Anime Entity\r\n */\r\nexport function fromJSONToCardEntity({\r\n  mal_id: id,\r\n  title,\r\n  image_url: imageUrl,\r\n}) {\r\n  return new Card({\r\n    id,\r\n    title,\r\n    imageUrl,\r\n  });\r\n}\r\n\r\nexport function fromJSONToAnimeEntity({\r\n  title,\r\n  image_url: imageUrl,\r\n  synopsis,\r\n  episodes,\r\n  score,\r\n  rating,\r\n  trailer_url: trailerUrl,\r\n}) {\r\n  return new Anime({\r\n    title,\r\n    imageUrl,\r\n    synopsis,\r\n    episodes,\r\n    score,\r\n    rating,\r\n    trailerUrl,\r\n  });\r\n}\r\n","import React, { useState } from \"react\";\r\n/* import useFetchOnChange from \"../hooks/simple-fetch/useFetchOnChange.js\"; */\r\n/* import useFetchOnChange from \"../hooks/fetch-with-reducer/useFetchOnChange.js\"; */\r\nimport useFetchOnChange from \"../hooks/fetch-with-cache/useFetchOnChange.js\";\r\nimport SearchTab from \"./SearchTab.jsx\";\r\nimport CardList from \"./CardList.jsx\";\r\nimport jikanApi from \"../js/api/api.js\";\r\nimport { fromJSONToCardEntity } from \"../js/mapper/mappers.js\";\r\n\r\nconst Home = () => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const { data, loading, error } = useFetchOnChange(\r\n    jikanApi,\r\n    searchTerm,\r\n    fromJSONToCardEntity,\r\n    500\r\n  );\r\n  return (\r\n    <React.Fragment>\r\n      <SearchTab value={searchTerm} setSearchTerm={setSearchTerm} />\r\n      {loading && <h2>Loading...</h2>}\r\n      {data && <CardList data={data} />}\r\n      {error && <h2>{error.message}</h2>}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useContext, useReducer, useEffect } from \"react\";\r\nimport { CacheContext } from \"../../components/CacheProvider.jsx\";\r\n\r\nconst initialState = { data: null, loading: false, error: false };\r\n\r\nconst fetchReducer = (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case \"LOAD\":\r\n      return { ...state, data: null, loading: true, error: null };\r\n    case \"SUCCESS\":\r\n      return { ...state, data: payload, loading: false, error: null };\r\n    case \"FAILURE\":\r\n      return { ...state, data: null, loading: false, error: payload };\r\n    case \"CLEAN\":\r\n      return { ...state, data: null, loading: false, error: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst useInstantFetch = (animeApi, animeId, mapper) => {\r\n  const cache = useContext(CacheContext);\r\n  const [state, dispatch] = useReducer(fetchReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    if (cache.state[animeId]) {\r\n      dispatch({ type: \"SUCCESS\", payload: cache.state[animeId] });\r\n      return;\r\n    }\r\n\r\n    const fetch = async () => {\r\n      dispatch({ type: \"LOAD\" });\r\n\r\n      try {\r\n        const data = await animeApi.getAnimeById(animeId);\r\n        const result = mapper(data);\r\n        dispatch({ type: \"SUCCESS\", payload: result });\r\n        cache.dispatch({\r\n          type: \"SET_CACHE\",\r\n          payload: { key: animeId, value: result },\r\n        });\r\n      } catch (error) {\r\n        dispatch({ type: \"FAILURE\", payload: error });\r\n      }\r\n    };\r\n\r\n    fetch();\r\n  }, [animeApi, animeId, mapper, cache]);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useInstantFetch;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport useInstantFetch from \"../hooks/instant-fetch/useInstantFetch.js\";\r\nimport jikanApi from \"../js/api/api.js\";\r\nimport { fromJSONToAnimeEntity } from \"../js/mapper/mappers\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  & > * {\r\n    display: block;\r\n    margin-top: 30px;\r\n  }\r\n\r\n  & > *:last-child {\r\n    margin-bottom: 30px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  @media screen and (max-width: 600px) {\r\n    & {\r\n      font-size: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Image = styled.img`\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst TextContent = styled.div`\r\n  background: #303030;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  width: 80%;\r\n  line-height: 25px;\r\n  letter-spacing: 1px;\r\n`;\r\n\r\nconst IconContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Icon = styled.div`\r\n  background: #ff9d00;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  box-shadow: -5px -5px 0px 0px #ff8400 inset,\r\n    5px 5px 0px 0px rgba(0, 0, 0, 0.2);\r\n  color: #000000;\r\n  margin: 20px;\r\n`;\r\n\r\nconst IFrameWrapper = styled.div`\r\n  position: relative;\r\n  overflow: hidden;\r\n  width: 80%;\r\n  padding-top: 40%;\r\n`;\r\n\r\nconst IFrame = styled.iframe`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst withoutAutoPlay = (url) =>\r\n  url\r\n    .split(\"&\")\r\n    .filter((element) => !element.includes(\"autoplay\"))\r\n    .join(\"&\");\r\n\r\nconst Anime = () => {\r\n  const { animeId } = useParams();\r\n  const { data, loading, error } = useInstantFetch(\r\n    jikanApi,\r\n    animeId,\r\n    fromJSONToAnimeEntity\r\n  );\r\n\r\n  const page = data ? (\r\n    <Wrapper>\r\n      <Title>{data.title}</Title>\r\n      <Image src={data.imageUrl} alt={data.title} />\r\n      <TextContent>{data.synopsis}</TextContent>\r\n      <IconContainer>\r\n        <Icon>Episodes: {data.episodes}</Icon>\r\n        <Icon>Score: {data.score}</Icon>\r\n        <Icon>Rating: {data.rating}</Icon>\r\n      </IconContainer>\r\n      {data.trailerUrl ? (\r\n        <IFrameWrapper>\r\n          <IFrame\r\n            title={`Trailer for ${data.title}`}\r\n            src={withoutAutoPlay(data.trailerUrl)}\r\n            frameBorder=\"0\"\r\n            allowFullScreen\r\n          />\r\n        </IFrameWrapper>\r\n      ) : null}\r\n    </Wrapper>\r\n  ) : null;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {page}\r\n      {loading && <h1>Loading</h1>}\r\n      {error && <h1>{error.message}</h1>}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Anime;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { CacheProvider } from \"./CacheProvider.jsx\";\r\nimport GlobalStyles from \"./GlobalStyles.jsx\";\r\nimport BaseLayout from \"./BaseLayout.jsx\";\r\nimport Home from \"./Home.jsx\";\r\nimport Anime from \"./Anime.jsx\";\r\n\r\nconst App = () => (\r\n  <CacheProvider>\r\n    <Router>\r\n      <GlobalStyles />\r\n      <BaseLayout>\r\n        <Switch>\r\n          <Route exact path=\"/home\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/home/anime/:animeId\">\r\n            <Anime />\r\n          </Route>\r\n          <Redirect to=\"/home\" />\r\n        </Switch>\r\n      </BaseLayout>\r\n    </Router>\r\n  </CacheProvider>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}